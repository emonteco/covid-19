{"version":3,"sources":["constants/index.js","redux/stats/actions.js","redux/stats/types.js","redux/countries/actions.js","redux/countries/types.js","assets/icons/day.svg","assets/icons/night.svg","components/ThemeButton/index.js","components/Header/index.js","redux/theme/actions.js","redux/theme/types.js","components/Card/index.js","utils/numbers.js","utils/strings.js","components/Stats/index.js","components/WorldStats/index.js","components/Country/index.js","components/WorldMap/index.js","components/CountryStats/index.js","components/Footer/index.js","App.js","config/serviceWorker.js","redux/countries/reducer.js","redux/stats/reducer.js","redux/theme/reducer.js","config/configureStore.js","index.js"],"names":["API","getWorldStatsSuccess","data","type","getCountriesStatsSuccess","getCountriesSuccess","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","d","_ref","svgRef","title","props","focusable","className","role","viewBox","ref","ForwardRef","forwardRef","ThemeButton","darkTheme","onClick","Header","dispatch","useDispatch","useSelector","state","theme","Card","number","percentage","color","toString","replace","defaultProps","getNumberString","getPercentageString","value","total","toFixed","Stats","confirmed","recovered","deaths","lastUpdate","verticalLayout","lastUpdateString","moment","fromNow","confirmedString","recoveredString","deathsString","recoveredPercentageString","deathsPercentageString","cssClass","WorldStats","worldStats","stats","world","Country","countries","selected","onChange","event","map","country","iso2","name","WorldMap","currentLayers","toLowerCase","layerProps","attributes","id","toUpperCase","tabIndex","CountryStats","countriesStats","list","selectedCountry","selectedCountryStats","find","handleChangeCountry","selectCountry","Footer","rel","href","App","useEffect","a","fetch","response","status","json","error","document","getElementsByTagName","setAttribute","Boolean","window","location","hostname","match","initialState","loading","reducer","action","loadingWorldStats","loadingCountriesStats","middlewares","thunk","preloadedState","store","createStore","combineReducers","countriesReducer","statsReducer","themeReducer","compose","applyMiddleware","f","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.59d49212.chunk.js","sourcesContent":["export const API = 'https://covid19.mathdro.id/api';","import {\n  GET_WORLD_STATS_REQUEST,\n  GET_WORLD_STATS_SUCCESS,\n  GET_WORLD_STATS_FAILURE,\n  GET_COUNTRIES_STATS_REQUEST,\n  GET_COUNTRIES_STATS_SUCCESS,\n  GET_COUNTRIES_STATS_FAILURE,\n} from './types';\nimport { API } from '../../constants';\n\nexport function getWorldStatsRequest() {\n  return {\n    type: GET_WORLD_STATS_REQUEST,\n  };\n}\n\nexport function getWorldStatsSuccess(data) {\n  return {\n    type: GET_WORLD_STATS_SUCCESS,\n    data,\n  };\n}\n\nexport function getWorldStatsFailure(error) {\n  return {\n    type: GET_WORLD_STATS_FAILURE,\n    error,\n  };\n}\n\nexport function getCountriesStatsRequest() {\n  return {\n    type: GET_COUNTRIES_STATS_REQUEST,\n  };\n}\n\nexport function getCountriesStatsSuccess(data) {\n  return {\n    type: GET_COUNTRIES_STATS_SUCCESS,\n    data,\n  };\n}\n\nexport function getCountriesStatsFailure(error) {\n  return {\n    type: GET_COUNTRIES_STATS_FAILURE,\n    error,\n  };\n}\n\nexport function getWorldStats() {\n  return async (dispatch) => {\n    dispatch(getWorldStatsRequest());\n    try {\n      const response = await fetch(API);\n      if (response.status >= 300) {\n        throw response.status;\n      } else {\n        const data = await response.json();\n        dispatch(getWorldStatsSuccess(data));\n      }\n    } catch (error) {\n      dispatch(getWorldStatsFailure(error));\n    }\n  };\n}\n\nexport function getCountriesStats() {\n  return async (dispatch) => {\n    dispatch(getCountriesStatsRequest());\n    try {\n      const response = await fetch(`${API}/confirmed`);\n      if (response.status >= 300) {\n        throw response.status;\n      } else {\n        const data = await response.json();\n        dispatch(getCountriesStatsSuccess(data));\n      }\n    } catch (error) {\n      dispatch(getCountriesStatsFailure(error));\n    }\n  };\n}\n","export const GET_WORLD_STATS_REQUEST = 'GET_WORLD_STATS_REQUEST';\nexport const GET_WORLD_STATS_SUCCESS = 'GET_WORLD_STATS_SUCCESS';\nexport const GET_WORLD_STATS_FAILURE = 'GET_WORLD_STATS_FAILURE';\nexport const GET_COUNTRIES_STATS_REQUEST = 'GET_COUNTRIES_STATS_REQUEST';\nexport const GET_COUNTRIES_STATS_SUCCESS = 'GET_COUNTRIES_STATS_SUCCESS';\nexport const GET_COUNTRIES_STATS_FAILURE = 'GET_COUNTRIES_STATS_FAILURE';\n","import {\n  GET_COUNTRIES_REQUEST,\n  GET_COUNTRIES_SUCCESS,\n  GET_COUNTRIES_FAILURE,\n  SELECT_COUNTRY,\n} from './types';\nimport { API } from '../../constants';\n\nexport function getCountriesRequest() {\n  return {\n    type: GET_COUNTRIES_REQUEST,\n  };\n}\n\nexport function getCountriesSuccess(data) {\n  return {\n    type: GET_COUNTRIES_SUCCESS,\n    data,\n  };\n}\n\nexport function getCountriesFailure(error) {\n  return {\n    type: GET_COUNTRIES_FAILURE,\n    error,\n  };\n}\n\nexport function selectCountry(country) {\n  return {\n    type: SELECT_COUNTRY,\n    country,\n  };\n}\n\nexport function getCountries() {\n  return async (dispatch) => {\n    dispatch(getCountriesRequest());\n    try {\n      const response = await fetch(`${API}/countries`);\n      if (response.status >= 300) {\n        throw response.status;\n      } else {\n        const data = await response.json();\n        dispatch(getCountriesSuccess(data && data.countries));\n      }\n    } catch (error) {\n      dispatch(getCountriesFailure(error));\n    }\n  };\n}\n","export const GET_COUNTRIES_REQUEST = 'GET_COUNTRIES_REQUEST';\nexport const GET_COUNTRIES_SUCCESS = 'GET_COUNTRIES_SUCCESS';\nexport const GET_COUNTRIES_FAILURE = 'GET_COUNTRIES_FAILURE';\nexport const SELECT_COUNTRY = 'SELECT_COUNTRY';\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"\n});\n\nvar SvgDay = function SvgDay(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"sun\",\n    className: \"svg-inline--fa fa-sun fa-w-16\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDay, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/day.aa59b8a4.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"\n});\n\nvar SvgNight = function SvgNight(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"moon\",\n    className: \"svg-inline--fa fa-moon fa-w-16\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgNight, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/night.399b1420.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ThemeButton.css';\nimport { ReactComponent as DayIcon } from '../../assets/icons/day.svg';\nimport { ReactComponent as NightIcon } from '../../assets/icons/night.svg';\n\nconst ThemeButton = ({ darkTheme, onClick }) => (\n  <button\n    type=\"button\"\n    className=\"theme-button p-0 m-0 rounded-circle d-flex justify-content-center align-items-center\"\n    title=\"Toggle Theme\"\n    onClick={onClick}\n  >\n    {\n      darkTheme ? <DayIcon /> : <NightIcon />\n    }\n  </button>\n);\n\nThemeButton.propTypes = {\n  darkTheme: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ThemeButton;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { toggleTheme } from '../../redux/theme/actions';\nimport ThemeButton from '../ThemeButton';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const darkTheme = useSelector((state) => state.theme.darkTheme);\n  const handleClickButton = () => dispatch(toggleTheme());\n\n  return (\n    <header className=\"container pt-4\">\n      <div className=\"row\">\n        <div className=\"col-9\">\n          <h1>COVID-19</h1>\n        </div>\n        <div className=\"col-3 d-flex flex-column align-items-end justify-content-center\">\n          <ThemeButton darkTheme={darkTheme} onClick={handleClickButton} />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import {\n  TOGGLE_THEME,\n} from './types';\n\nexport function toggleTheme() {\n  return {\n    type: TOGGLE_THEME,\n  };\n}\n","export const TOGGLE_THEME = 'TOGGLE_THEME';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Card.css';\nimport { formatNumber } from '../../utils/numbers';\n\nconst Card = ({\n  title, number, percentage, color,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-body\">\n      <h3 className={`m-0 text-${color}`}>\n        {formatNumber(number)}\n        {percentage && <small className=\"text-muted ml-1\">{percentage}</small>}\n      </h3>\n      <p className=\"m-0\">\n        {title}\n      </p>\n    </div>\n  </div>\n);\n\nCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  number: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n  percentage: PropTypes.string,\n  color: PropTypes.string,\n};\n\nCard.defaultProps = {\n  percentage: null,\n  color: 'primary',\n};\n\nexport default Card;\n","export const formatNumber = (num) => num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n","export const getNumberString = (number) => ((typeof number === 'number') ? number : '-');\n\nexport const getPercentageString = (value, total) => (typeof value === 'number' && typeof total === 'number' && `(${((value / total) * 100).toFixed(2)}%)`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport Card from '../Card';\nimport { getNumberString, getPercentageString } from '../../utils/strings';\n\nconst Stats = ({\n  confirmed, recovered, deaths, lastUpdate, verticalLayout,\n}) => {\n  const lastUpdateString = (lastUpdate && moment(lastUpdate).fromNow()) || '-';\n  const confirmedString = getNumberString(confirmed);\n  const recoveredString = getNumberString(recovered);\n  const deathsString = getNumberString(deaths);\n  const recoveredPercentageString = getPercentageString(recovered, confirmed);\n  const deathsPercentageString = getPercentageString(deaths, confirmed);\n  const cssClass = verticalLayout ? 'col-sm-12 mb-2' : 'col-sm-12 col-md-4 mb-2';\n\n  return (\n    <div className=\"world-stats\">\n      <div className=\"row\">\n        <div className={cssClass}>\n          <Card\n            title=\"Confirmed\"\n            number={confirmedString}\n            color=\"warning\"\n          />\n        </div>\n        <div className={cssClass}>\n          <Card\n            title=\"Recovered\"\n            number={recoveredString}\n            percentage={recoveredPercentageString}\n            color=\"success\"\n          />\n        </div>\n        <div className={cssClass}>\n          <Card\n            title=\"Deaths\"\n            number={deathsString}\n            percentage={deathsPercentageString}\n            color=\"danger\"\n          />\n        </div>\n      </div>\n      <small className=\"text-muted\">{`Last update: ${lastUpdateString}`}</small>\n    </div>\n  );\n};\n\nStats.propTypes = {\n  confirmed: PropTypes.number,\n  recovered: PropTypes.number,\n  deaths: PropTypes.number,\n  lastUpdate: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  verticalLayout: PropTypes.bool,\n};\n\nStats.defaultProps = {\n  confirmed: null,\n  recovered: null,\n  deaths: null,\n  lastUpdate: '',\n  verticalLayout: false,\n};\n\nexport default Stats;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Stats from '../Stats';\n\nconst WorldStats = () => {\n  const worldStats = useSelector((state) => state.stats.world);\n\n  return (\n    <div className=\"world-stats container mt-4\">\n      <h2 className=\"h4\">World Stats</h2>\n      <Stats\n        confirmed={worldStats && worldStats.confirmed && worldStats.confirmed.value}\n        recovered={worldStats && worldStats.recovered && worldStats.recovered.value}\n        deaths={worldStats && worldStats.deaths && worldStats.deaths.value}\n        lastUpdate={worldStats && worldStats.lastUpdate}\n      />\n    </div>\n  );\n};\n\nexport default WorldStats;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Country.css';\n\nconst Country = ({ countries, selected, onChange }) => {\n  const handleChange = (event) => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <div className=\"country row mb-4\">\n      <div className=\"col-12\">\n        <select value={selected} onChange={handleChange} className=\"form-control\">\n          <option>{}</option>\n          {\n            countries.map((country) => (\n              <option key={country.iso2} value={country.iso2}>{country.name}</option>\n            ))\n          }\n        </select>\n      </div>\n    </div>\n  );\n};\n\nCountry.propTypes = {\n  countries: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    iso2: PropTypes.string,\n  })).isRequired,\n  selected: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nCountry.defaultProps = {\n  selected: null,\n};\n\nexport default Country;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { VectorMap } from '@south-paw/react-vector-maps';\n\nimport world from '../../maps/world.json';\nimport './WorldMap.css';\n\nconst WorldMap = ({ onClick, selected }) => {\n  const currentLayers = [selected && selected.toLowerCase()];\n  const layerProps = {\n    onClick: ({ target }) => onClick(target.attributes.id.value.toUpperCase()),\n  };\n\n  return (\n    <div className=\"world-map\">\n      <VectorMap\n        {...world}\n        layerProps={layerProps}\n        currentLayers={currentLayers}\n        tabIndex={-1}\n      />\n    </div>\n  );\n};\n\nWorldMap.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  selected: PropTypes.string,\n};\n\nWorldMap.defaultProps = {\n  selected: null,\n};\n\nexport default WorldMap;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectCountry } from '../../redux/countries/actions';\nimport Stats from '../Stats';\nimport Country from '../Country';\nimport WorldMap from '../WorldMap';\n\nconst CountryStats = () => {\n  const dispatch = useDispatch();\n  const countriesStats = useSelector((state) => state.stats.countries);\n  const countries = useSelector((state) => state.countries.list);\n  const selectedCountry = useSelector((state) => state.countries.selected);\n  const selectedCountryStats = countriesStats.find((country) => country.iso2 === selectedCountry);\n\n  const handleChangeCountry = (country) => {\n    dispatch(selectCountry(country));\n  };\n\n  return (\n    <div className=\"country-stats container mt-4 mt-md-5\">\n      <div className=\"row\">\n        <div className=\"col-sm-12 col-md-9\">\n          <WorldMap onClick={handleChangeCountry} selected={selectedCountry} />\n        </div>\n        <div className=\"col-sm-12 col-md-3 mt-3 mt-md-0\">\n          <h2 className=\"h4\">Country</h2>\n          <Country\n            countries={countries}\n            selected={selectedCountry}\n            onChange={handleChangeCountry}\n          />\n          <Stats\n            confirmed={selectedCountryStats && selectedCountryStats.confirmed}\n            recovered={selectedCountryStats && selectedCountryStats.recovered}\n            deaths={selectedCountryStats && selectedCountryStats.deaths}\n            lastUpdate={selectedCountryStats && selectedCountryStats.lastUpdate}\n            verticalLayout\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CountryStats;\n","import React from 'react';\n\nconst Footer = () => (\n  <footer className=\"small text-center py-2 mt-5\">\n    API:&nbsp;\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/mathdroid/covid-19-api\">COVID-19 API</a>\n    &nbsp;| Dev: &nbsp;\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/emmanuelmontenegro/\">Emmanuel Montenegro</a>\n  </footer>\n);\n\nexport default Footer;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getWorldStats, getCountriesStats } from './redux/stats/actions';\nimport { getCountries } from './redux/countries/actions';\nimport Header from './components/Header';\nimport WorldStats from './components/WorldStats';\nimport CountryStats from './components/CountryStats';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const darkTheme = useSelector((state) => state.theme.darkTheme);\n  const theme = darkTheme ? 'dark' : 'light';\n\n  useEffect(() => {\n    dispatch(getCountries());\n    dispatch(getWorldStats());\n    dispatch(getCountriesStats());\n  }, []);\n\n  useEffect(() => {\n    document\n      .getElementsByTagName('body')[0]\n      .setAttribute('data-theme', theme);\n  }, [darkTheme]);\n\n  return (\n    <>\n      <Header />\n      <WorldStats />\n      <CountryStats />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  GET_COUNTRIES_REQUEST,\n  GET_COUNTRIES_SUCCESS,\n  GET_COUNTRIES_FAILURE,\n  SELECT_COUNTRY,\n} from './types';\n\nconst initialState = {\n  loading: false,\n  list: [],\n  selected: null,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_COUNTRIES_REQUEST: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n\n    case GET_COUNTRIES_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        list: action.data,\n      };\n    }\n\n    case GET_COUNTRIES_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    }\n\n    case SELECT_COUNTRY: {\n      return {\n        ...state,\n        selected: action.country,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_WORLD_STATS_REQUEST,\n  GET_WORLD_STATS_SUCCESS,\n  GET_WORLD_STATS_FAILURE,\n  GET_COUNTRIES_STATS_REQUEST,\n  GET_COUNTRIES_STATS_SUCCESS,\n  GET_COUNTRIES_STATS_FAILURE,\n} from './types';\n\nconst initialState = {\n  loadingWorldStats: false,\n  loadingCountriesStats: false,\n  world: {},\n  countries: [],\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_WORLD_STATS_REQUEST: {\n      return {\n        ...state,\n        loadingWorldStats: true,\n      };\n    }\n\n    case GET_WORLD_STATS_SUCCESS: {\n      return {\n        ...state,\n        loadingWorldStats: false,\n        world: action.data,\n      };\n    }\n\n    case GET_WORLD_STATS_FAILURE: {\n      return {\n        ...state,\n        loadingWorldStats: false,\n        error: action.error,\n      };\n    }\n\n    case GET_COUNTRIES_STATS_REQUEST: {\n      return {\n        ...state,\n        loadingCountriesStats: true,\n      };\n    }\n\n    case GET_COUNTRIES_STATS_SUCCESS: {\n      return {\n        ...state,\n        loadingCountriesStats: false,\n        countries: action.data,\n      };\n    }\n\n    case GET_COUNTRIES_STATS_FAILURE: {\n      return {\n        ...state,\n        loadingCountriesStats: false,\n        error: action.error,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import {\n  TOGGLE_THEME,\n} from './types';\n\nconst initialState = {\n  darkTheme: false,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case TOGGLE_THEME: {\n      return {\n        ...state,\n        darkTheme: !state.darkTheme,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import {\n  applyMiddleware, compose, createStore, combineReducers,\n} from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport countriesReducer from '../redux/countries/reducer';\nimport statsReducer from '../redux/stats/reducer';\nimport themeReducer from '../redux/theme/reducer';\n\nconst DEBUG = (process.env.NODE_ENV === 'development');\n\nconst createRootReducer = () => combineReducers({\n  countries: countriesReducer,\n  stats: statsReducer,\n  theme: themeReducer,\n});\n\nconst middlewares = [thunk];\n\nif (DEBUG) {\n  const loggerMiddleware = createLogger();\n  middlewares.push(loggerMiddleware);\n}\n\nexport default function configureStore(preloadedState) {\n  return createStore(\n    createRootReducer(),\n    preloadedState,\n    compose(\n      applyMiddleware(...middlewares),\n      DEBUG && window.devToolsExtension\n        ? window.devToolsExtension()\n        : (f) => f,\n    ),\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './config/serviceWorker';\nimport configureStore from './config/configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}