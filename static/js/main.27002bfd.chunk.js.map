{"version":3,"sources":["redux/stats/actions.js","redux/stats/types.js","redux/countries/actions.js","redux/countries/types.js","assets/icons/day.svg","assets/icons/night.svg","components/ThemeButton/index.js","components/Header/index.js","redux/theme/actions.js","redux/theme/types.js","components/Card/index.js","utils/numbers.js","utils/strings.js","components/Stats/index.js","components/WorldStats/index.js","components/Country/index.js","components/WorldMap/index.js","components/CountryStats/index.js","components/Footer/index.js","App.js","config/serviceWorker.js","redux/countries/reducer.js","redux/stats/reducer.js","redux/theme/reducer.js","redux/rootReducer.js","constants/index.js","services/api.js","redux/countries/sagas.js","redux/stats/sagas.js","redux/rootSaga.js","config/configureStore.js","index.js"],"names":["getWorldStatsSuccess","data","type","getCountryStatsSuccess","getCountriesSuccess","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","d","_ref","svgRef","title","props","focusable","className","role","viewBox","ref","ForwardRef","forwardRef","ThemeButton","darkTheme","onClick","id","Header","dispatch","useDispatch","useSelector","state","theme","Card","number","percentage","color","loading","toString","replace","defaultProps","getNumberString","getPercentageString","value","total","toFixed","Stats","confirmed","recovered","deaths","lastUpdate","verticalLayout","lastUpdateString","moment","fromNow","confirmedString","recoveredString","deathsString","recoveredPercentageString","deathsPercentageString","cssClass","WorldStats","worldStats","stats","world","loadingWorldStats","Country","countries","selected","onChange","event","map","country","iso2","name","WorldMap","currentLayers","toLowerCase","layerProps","attributes","toUpperCase","tabIndex","CountryStats","list","selectedCountry","countryStats","loadingCountryStats","handleChangeCountry","selectCountry","Footer","rel","href","App","useEffect","document","getElementsByTagName","setAttribute","Boolean","window","location","hostname","match","initialState","reducer","action","error","API","getRequest","path","url","fetch","then","response","ok","status","json","Error","getWorldStats","getCountries","getCountryStats","fetchCountries","countriesSaga","Api","put","takeLatest","fetchWorldStats","fetchCountryStats","statsSaga","getCountryStatsRequest","rootSaga","all","sagaMiddleware","createSagaMiddleware","middlewares","thunk","store","preloadedState","createStore","combineReducers","countriesReducer","statsReducer","themeReducer","compose","applyMiddleware","f","run","configureStore","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.27002bfd.chunk.js","sourcesContent":["import {\n  GET_WORLD_STATS_REQUEST,\n  GET_WORLD_STATS_SUCCESS,\n  GET_WORLD_STATS_FAILURE,\n  GET_COUNTRY_STATS_REQUEST,\n  GET_COUNTRY_STATS_SUCCESS,\n  GET_COUNTRY_STATS_FAILURE,\n} from './types';\n\nexport function getWorldStatsRequest() {\n  return {\n    type: GET_WORLD_STATS_REQUEST,\n  };\n}\n\nexport function getWorldStatsSuccess(data) {\n  return {\n    type: GET_WORLD_STATS_SUCCESS,\n    data,\n  };\n}\n\nexport function getWorldStatsFailure(error) {\n  return {\n    type: GET_WORLD_STATS_FAILURE,\n    error,\n  };\n}\n\nexport function getCountryStatsRequest(country) {\n  return {\n    type: GET_COUNTRY_STATS_REQUEST,\n    country,\n  };\n}\n\nexport function getCountryStatsSuccess(data) {\n  return {\n    type: GET_COUNTRY_STATS_SUCCESS,\n    data,\n  };\n}\n\nexport function getCountryStatsFailure(error) {\n  return {\n    type: GET_COUNTRY_STATS_FAILURE,\n    error,\n  };\n}\n","export const GET_WORLD_STATS_REQUEST = 'GET_WORLD_STATS_REQUEST';\nexport const GET_WORLD_STATS_SUCCESS = 'GET_WORLD_STATS_SUCCESS';\nexport const GET_WORLD_STATS_FAILURE = 'GET_WORLD_STATS_FAILURE';\nexport const GET_COUNTRY_STATS_REQUEST = 'GET_COUNTRY_STATS_REQUEST';\nexport const GET_COUNTRY_STATS_SUCCESS = 'GET_COUNTRY_STATS_SUCCESS';\nexport const GET_COUNTRY_STATS_FAILURE = 'GET_COUNTRY_STATS_FAILURE';\n","import {\n  GET_COUNTRIES_REQUEST,\n  GET_COUNTRIES_SUCCESS,\n  GET_COUNTRIES_FAILURE,\n  SELECT_COUNTRY,\n} from './types';\n\nexport function getCountriesRequest() {\n  return {\n    type: GET_COUNTRIES_REQUEST,\n  };\n}\n\nexport function getCountriesSuccess(data) {\n  return {\n    type: GET_COUNTRIES_SUCCESS,\n    data,\n  };\n}\n\nexport function getCountriesFailure(error) {\n  return {\n    type: GET_COUNTRIES_FAILURE,\n    error,\n  };\n}\n\nexport function selectCountry(country) {\n  return {\n    type: SELECT_COUNTRY,\n    country,\n  };\n}\n","export const GET_COUNTRIES_REQUEST = 'GET_COUNTRIES_REQUEST';\nexport const GET_COUNTRIES_SUCCESS = 'GET_COUNTRIES_SUCCESS';\nexport const GET_COUNTRIES_FAILURE = 'GET_COUNTRIES_FAILURE';\nexport const SELECT_COUNTRY = 'SELECT_COUNTRY';\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"\n});\n\nvar SvgDay = function SvgDay(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"sun\",\n    className: \"svg-inline--fa fa-sun fa-w-16\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDay, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/day.aa59b8a4.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"\n});\n\nvar SvgNight = function SvgNight(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"moon\",\n    className: \"svg-inline--fa fa-moon fa-w-16\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgNight, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/night.399b1420.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ThemeButton.scss';\nimport { ReactComponent as DayIcon } from '../../assets/icons/day.svg';\nimport { ReactComponent as NightIcon } from '../../assets/icons/night.svg';\n\nconst ThemeButton = ({ darkTheme, onClick }) => (\n  <button\n    type=\"button\"\n    className=\"theme-button p-0 m-0 rounded-circle d-flex justify-content-center align-items-center\"\n    title=\"Toggle Theme\"\n    onClick={onClick}\n  >\n    {\n      darkTheme ? <DayIcon id=\"light-mode\" /> : <NightIcon id=\"dark-mode\" />\n    }\n  </button>\n);\n\nThemeButton.propTypes = {\n  darkTheme: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ThemeButton;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { toggleTheme } from '../../redux/theme/actions';\nimport ThemeButton from '../ThemeButton';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const darkTheme = useSelector((state) => state.theme.darkTheme);\n  const handleClickButton = () => dispatch(toggleTheme());\n\n  return (\n    <header className=\"container pt-4\">\n      <div className=\"row\">\n        <div className=\"col-9\">\n          <h1>COVID-19</h1>\n        </div>\n        <div className=\"col-3 d-flex flex-column align-items-end justify-content-center\">\n          <ThemeButton darkTheme={darkTheme} onClick={handleClickButton} />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import {\n  TOGGLE_THEME,\n} from './types';\n\nexport function toggleTheme() {\n  return {\n    type: TOGGLE_THEME,\n  };\n}\n","export const TOGGLE_THEME = 'TOGGLE_THEME';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Card.scss';\nimport { formatNumber } from '../../utils/numbers';\n\nconst Card = ({\n  title, number, percentage, color, loading,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-body\">\n      {\n        loading\n          ? <div className=\"spinner-border text-primary\" role=\"status\" />\n          : (\n            <h3 className={`m-0 text-${color}`}>\n              {formatNumber(number)}\n              {percentage && <small className=\"text-muted ml-1\">{percentage}</small>}\n            </h3>\n          )\n        }\n      <p className=\"m-0\">\n        {title}\n      </p>\n    </div>\n  </div>\n);\n\nCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  number: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n  percentage: PropTypes.string,\n  color: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nCard.defaultProps = {\n  percentage: null,\n  color: 'primary',\n};\n\nexport default Card;\n","export const formatNumber = (num) => num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n","export const getNumberString = (number) => ((typeof number === 'number') ? number : '-');\n\nexport const getPercentageString = (value, total) => (typeof value === 'number' && typeof total === 'number' && `(${((value / total) * 100).toFixed(2)}%)`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport Card from '../Card';\nimport { getNumberString, getPercentageString } from '../../utils/strings';\n\nconst Stats = ({\n  confirmed, recovered, deaths, lastUpdate, verticalLayout, loading,\n}) => {\n  const lastUpdateString = (lastUpdate && moment(lastUpdate).fromNow()) || '-';\n  const confirmedString = getNumberString(confirmed);\n  const recoveredString = getNumberString(recovered);\n  const deathsString = getNumberString(deaths);\n  const recoveredPercentageString = getPercentageString(recovered, confirmed);\n  const deathsPercentageString = getPercentageString(deaths, confirmed);\n  const cssClass = verticalLayout ? 'col-sm-12 mb-2' : 'col-sm-12 col-md-4 mb-2';\n\n  return (\n    <div className=\"world-stats\">\n      <div className=\"row\">\n        <div className={cssClass}>\n          <Card\n            title=\"Confirmed\"\n            number={confirmedString}\n            color=\"warning\"\n            loading={loading}\n          />\n        </div>\n        <div className={cssClass}>\n          <Card\n            title=\"Recovered\"\n            number={recoveredString}\n            percentage={recoveredPercentageString}\n            color=\"success\"\n            loading={loading}\n          />\n        </div>\n        <div className={cssClass}>\n          <Card\n            title=\"Deaths\"\n            number={deathsString}\n            percentage={deathsPercentageString}\n            color=\"danger\"\n            loading={loading}\n          />\n        </div>\n      </div>\n      <small className=\"text-muted\">{`Last update: ${lastUpdateString}`}</small>\n    </div>\n  );\n};\n\nStats.propTypes = {\n  confirmed: PropTypes.number,\n  recovered: PropTypes.number,\n  deaths: PropTypes.number,\n  lastUpdate: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  verticalLayout: PropTypes.bool,\n  loading: PropTypes.bool.isRequired,\n};\n\nStats.defaultProps = {\n  confirmed: null,\n  recovered: null,\n  deaths: null,\n  lastUpdate: '',\n  verticalLayout: false,\n};\n\nexport default Stats;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Stats from '../Stats';\n\nconst WorldStats = () => {\n  const worldStats = useSelector((state) => state.stats.world);\n  const loadingWorldStats = useSelector((state) => state.stats.loadingWorldStats);\n\n  return (\n    <div className=\"world-stats container mt-4\">\n      <h2 className=\"h4\">World Stats</h2>\n      <Stats\n        confirmed={worldStats && worldStats.confirmed && worldStats.confirmed.value}\n        recovered={worldStats && worldStats.recovered && worldStats.recovered.value}\n        deaths={worldStats && worldStats.deaths && worldStats.deaths.value}\n        lastUpdate={worldStats && worldStats.lastUpdate}\n        loading={loadingWorldStats}\n      />\n    </div>\n  );\n};\n\nexport default WorldStats;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Country.scss';\n\nconst Country = ({ countries, selected, onChange }) => {\n  const handleChange = (event) => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <div className=\"country row mb-4\">\n      <div className=\"col-12\">\n        <select value={selected} onChange={handleChange} className=\"form-control\">\n          <option>{}</option>\n          {\n            countries.map((country) => (\n              <option key={country.iso2} value={country.iso2}>{country.name}</option>\n            ))\n          }\n        </select>\n      </div>\n    </div>\n  );\n};\n\nCountry.propTypes = {\n  countries: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    iso2: PropTypes.string,\n  })).isRequired,\n  selected: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nCountry.defaultProps = {\n  selected: null,\n};\n\nexport default Country;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { VectorMap } from '@south-paw/react-vector-maps';\n\nimport world from '../../maps/world.json';\nimport './WorldMap.scss';\n\nconst WorldMap = ({ onClick, selected }) => {\n  const currentLayers = [selected && selected.toLowerCase()];\n  const layerProps = {\n    onClick: ({ target }) => onClick(target.attributes.id.value.toUpperCase()),\n  };\n\n  return (\n    <div className=\"world-map\">\n      <VectorMap\n        {...world}\n        layerProps={layerProps}\n        currentLayers={currentLayers}\n        tabIndex={-1}\n      />\n    </div>\n  );\n};\n\nWorldMap.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  selected: PropTypes.string,\n};\n\nWorldMap.defaultProps = {\n  selected: null,\n};\n\nexport default WorldMap;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectCountry } from '../../redux/countries/actions';\nimport Stats from '../Stats';\nimport Country from '../Country';\nimport WorldMap from '../WorldMap';\n\nconst CountryStats = () => {\n  const dispatch = useDispatch();\n  const countries = useSelector((state) => state.countries.list);\n  const selectedCountry = useSelector((state) => state.countries.selected);\n  const countryStats = useSelector((state) => state.stats.country);\n  const loadingCountryStats = useSelector((state) => state.stats.loadingCountryStats);\n\n  const handleChangeCountry = (country) => {\n    dispatch(selectCountry(country));\n  };\n\n  return (\n    <div className=\"country-stats container mt-4 mt-md-5\">\n      <div className=\"row\">\n        <div className=\"col-sm-12 col-md-9\">\n          <WorldMap onClick={handleChangeCountry} selected={selectedCountry} />\n        </div>\n        <div className=\"col-sm-12 col-md-3 mt-3 mt-md-0\">\n          <h2 className=\"h4\">Country</h2>\n          <Country\n            countries={countries}\n            selected={selectedCountry}\n            onChange={handleChangeCountry}\n          />\n          <Stats\n            confirmed={countryStats && countryStats.confirmed && countryStats.confirmed.value}\n            recovered={countryStats && countryStats.recovered && countryStats.recovered.value}\n            deaths={countryStats && countryStats.deaths && countryStats.deaths.value}\n            lastUpdate={countryStats && countryStats.lastUpdate}\n            verticalLayout\n            loading={loadingCountryStats}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CountryStats;\n","import React from 'react';\n\nconst Footer = () => (\n  <footer className=\"small text-center py-2 mt-5\">\n    API:&nbsp;\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/mathdroid/covid-19-api\">COVID-19 API</a>\n    &nbsp;| Dev: &nbsp;\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/emmanuelmontenegro/\">Emmanuel Montenegro</a>\n  </footer>\n);\n\nexport default Footer;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getWorldStatsRequest } from './redux/stats/actions';\nimport { getCountriesRequest } from './redux/countries/actions';\nimport Header from './components/Header';\nimport WorldStats from './components/WorldStats';\nimport CountryStats from './components/CountryStats';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const darkTheme = useSelector((state) => state.theme.darkTheme);\n  const theme = darkTheme ? 'dark' : 'light';\n\n  useEffect(() => {\n    dispatch(getCountriesRequest());\n    dispatch(getWorldStatsRequest());\n  }, []);\n\n  useEffect(() => {\n    document\n      .getElementsByTagName('body')[0]\n      .setAttribute('data-theme', theme);\n  }, [darkTheme]);\n\n  return (\n    <>\n      <Header />\n      <WorldStats />\n      <CountryStats />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  GET_COUNTRIES_REQUEST,\n  GET_COUNTRIES_SUCCESS,\n  GET_COUNTRIES_FAILURE,\n  SELECT_COUNTRY,\n} from './types';\n\nconst initialState = {\n  loading: false,\n  list: [],\n  selected: null,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_COUNTRIES_REQUEST: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n\n    case GET_COUNTRIES_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        list: action.data,\n      };\n    }\n\n    case GET_COUNTRIES_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    }\n\n    case SELECT_COUNTRY: {\n      return {\n        ...state,\n        selected: action.country,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_WORLD_STATS_REQUEST,\n  GET_WORLD_STATS_SUCCESS,\n  GET_WORLD_STATS_FAILURE,\n  GET_COUNTRY_STATS_REQUEST,\n  GET_COUNTRY_STATS_SUCCESS,\n  GET_COUNTRY_STATS_FAILURE,\n} from './types';\n\nconst initialState = {\n  loadingWorldStats: false,\n  loadingCountryStats: false,\n  world: {},\n  country: {},\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_WORLD_STATS_REQUEST: {\n      return {\n        ...state,\n        loadingWorldStats: true,\n      };\n    }\n\n    case GET_WORLD_STATS_SUCCESS: {\n      return {\n        ...state,\n        loadingWorldStats: false,\n        world: action.data,\n      };\n    }\n\n    case GET_WORLD_STATS_FAILURE: {\n      return {\n        ...state,\n        loadingWorldStats: false,\n        error: action.error,\n      };\n    }\n\n    case GET_COUNTRY_STATS_REQUEST: {\n      return {\n        ...state,\n        country: {},\n        loadingCountryStats: true,\n      };\n    }\n\n    case GET_COUNTRY_STATS_SUCCESS: {\n      return {\n        ...state,\n        loadingCountryStats: false,\n        country: action.data,\n      };\n    }\n\n    case GET_COUNTRY_STATS_FAILURE: {\n      return {\n        ...state,\n        loadingCountryStats: false,\n        error: action.error,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import {\n  TOGGLE_THEME,\n} from './types';\n\nconst initialState = {\n  darkTheme: false,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case TOGGLE_THEME: {\n      return {\n        ...state,\n        darkTheme: !state.darkTheme,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import {\n  combineReducers,\n} from 'redux';\n\nimport countriesReducer from './countries/reducer';\nimport statsReducer from './stats/reducer';\nimport themeReducer from './theme/reducer';\n\nexport default () => combineReducers({\n  countries: countriesReducer,\n  stats: statsReducer,\n  theme: themeReducer,\n});\n","export const API = 'https://covid19.mathdro.id/api/';\n","import { API } from '../constants';\n\nexport const getRequest = (path = '') => {\n  const url = `${API}${path}`;\n\n  return fetch(url).then((response) => {\n    if (response.ok) {\n      if (response.status === 204) {\n        return true;\n      }\n      return response.json();\n    }\n\n    throw new Error(`API request failed: ${url}`);\n  });\n};\n\nexport const getWorldStats = () => getRequest();\n\nexport const getCountries = () => getRequest('countries');\n\nexport const getCountryStats = (country) => getRequest(`countries/${country}`);\n","import {\n  call, put, takeLatest,\n} from 'redux-saga/effects';\n\nimport * as Api from '../../services/api';\nimport {\n  getCountriesSuccess,\n  getCountriesFailure,\n} from './actions';\nimport {\n  GET_COUNTRIES_REQUEST,\n} from './types';\n\nfunction* fetchCountries() {\n  try {\n    const data = yield call(Api.getCountries);\n    yield put(getCountriesSuccess(data && data.countries));\n  } catch (error) {\n    yield put(getCountriesFailure(error));\n  }\n}\n\nexport default function* countriesSaga() {\n  yield takeLatest(GET_COUNTRIES_REQUEST, fetchCountries);\n}\n","import {\n  call, put, takeLatest,\n} from 'redux-saga/effects';\n\nimport * as Api from '../../services/api';\nimport {\n  getWorldStatsSuccess,\n  getWorldStatsFailure,\n  getCountryStatsRequest,\n  getCountryStatsSuccess,\n  getCountryStatsFailure,\n} from './actions';\nimport {\n  GET_WORLD_STATS_REQUEST,\n} from './types';\nimport {\n  SELECT_COUNTRY,\n} from '../countries/types';\n\nfunction* fetchWorldStats() {\n  try {\n    const data = yield call(Api.getWorldStats);\n    yield put(getWorldStatsSuccess(data));\n  } catch (error) {\n    yield put(getWorldStatsFailure(error));\n  }\n}\n\nfunction* fetchCountryStats(action) {\n  try {\n    yield put(getCountryStatsRequest());\n    const data = yield call(Api.getCountryStats, action.country);\n    yield put(getCountryStatsSuccess(data));\n  } catch (error) {\n    yield put(getCountryStatsFailure(error));\n  }\n}\n\nexport default function* statsSaga() {\n  yield takeLatest(GET_WORLD_STATS_REQUEST, fetchWorldStats);\n  yield takeLatest(SELECT_COUNTRY, fetchCountryStats);\n}\n","import { all } from 'redux-saga/effects';\n\nimport countriesSaga from './countries/sagas';\nimport statsSaga from './stats/sagas';\n\nexport default function* rootSaga() {\n  yield all([\n    countriesSaga(),\n    statsSaga(),\n  ]);\n}\n","import {\n  applyMiddleware, compose, createStore,\n} from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from '../redux/rootReducer';\nimport rootSaga from '../redux/rootSaga';\n\nconst DEBUG = (process.env.NODE_ENV === 'development');\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [thunk, sagaMiddleware];\n\nif (DEBUG) {\n  const loggerMiddleware = createLogger();\n  middlewares.push(loggerMiddleware);\n}\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    rootReducer(),\n    preloadedState,\n    compose(\n      applyMiddleware(...middlewares),\n      DEBUG && window.devToolsExtension\n        ? window.devToolsExtension()\n        : (f) => f,\n    ),\n  );\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './config/serviceWorker';\nimport configureStore from './config/configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}